%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2
%%AI8_CreatorVersion: 15.0.0
%%For: (Dima) ()
%%Title: (Tampa Bay Rays insig.eps)
%%CreationDate: 9/30/2010 2:46 PM
%%Canvassize: 16383
%%BoundingBox: 291 -411 501 -201
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_pattern_AI3 1.0 0
%%+ procset Adobe_Illustrator_AI3 1.0 1
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%%DocumentCustomColors: (PANTONE 288 CV)
%%+ (PANTONE 3308 CV)
%%CMYKCustomColor: 1 0.65098 0 0.305882 (PANTONE 288 CV)
%%+ 1 0 0.6 0.721569 (PANTONE 3308 CV)
%AI3_TemplateBox: 396 -306 396 -306
%AI3_TileBox: 14.3999 -600 777.5996 -12
%AI3_DocumentPreview: Header
%%PageOrigin:90 -702
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 0
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
	} ifelse
} def
/terminate
{
} def
/packedarray
{
array astore readonly
} def
/setpacking
{
pop
} def
/currentpacking
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
 end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_cmykcolor eq
	{
 end
	} if
} def
/setcmykcolor
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 0
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
 end
 end
	} ifelse
} def
/terminate
{
} def
/cshow
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 0
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
 end
	Adobe_customcolor begin
	} ifelse
} def
/terminate
{
currentdict Adobe_customcolor eq
	{
 end
	} if
} def
/findcmykcustomcolor
{
5 packedarray
}  def
/setcustomcolor
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (7/21/89) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_pattern_AI3 16 dict dup begin put
/initialize
{
/definepattern where
	{
	pop
	}
	{
	Adobe_pattern_AI3 begin
	Adobe_pattern_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	mark
	cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
		{
		10000 add
		dup 2 index gt
			{
			exit
			} if
		dup setcachelimit
		} loop
		} stopped
	cleartomark
	} ifelse
} def
/terminate
{
currentdict Adobe_pattern_AI3 eq
	{
 end
	} if
} def
errordict
/nocurrentpoint
{
pop
stop
} put
errordict
/invalidaccess
{
pop
stop
} put
/patternencoding
256 array def
0 1 255
{
patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
17 dict begin
/uniform exch def
/cache exch def
/key exch def
/procarray exch def
/mtx exch matrix invertmatrix def
/height exch def
/width exch def
/ctm matrix currentmatrix def
/ptm matrix def
/str 32 string def
/slice 9 dict def
slice /s 1 put
slice /q 256 procarray length div sqrt floor cvi put
slice /b 0 put
/FontBBox [0 0 0 0] def
/FontMatrix mtx matrix copy def
/Encoding patternencoding def
/FontType 3 def
/BuildChar
	{
	exch
 begin
	/setstrokeadjust where {pop true setstrokeadjust} if
	slice begin
	dup q dup mul mod s idiv /i exch def
	dup q dup mul mod s mod /j exch def
	q dup mul idiv procarray exch get
	/xl j width s div mul def
	/xg j 1 add width s div mul def
	/yl i height s div mul def
	/yg i 1 add height s div mul def
	uniform
		{
		1 1
		}
		{
		width 0 dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		0 height dtransform
		dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
	width 0 cache
		{
		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
		setcachedevice
		}
		{
		setcharwidth
		} ifelse
	gsave
	scale
	newpath
	xl yl moveto
	xg yl lineto
	xg yg lineto
	xl yg lineto
	closepath
	clip
	newpath
 end
 end
	exec
	grestore
	} def
key currentdict definefont
end
} def
/patterncachesize
{
gsave
newpath
0 0 moveto
width 0 lineto
width height lineto
0 height lineto
closepath
patternmatrix setmatrix
pathbbox
exch ceiling 4 -1 roll floor sub 3 1 roll
ceiling exch floor sub
mul 1 add
grestore
} def
/patterncachelimit
{
cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
exch dup begin setfont
ctm setmatrix
concat
slice exch /b exch slice /q get dup mul mul put
FontMatrix concat
uniform
	{
	width 0 dtransform round width div exch round width div exch
	0 height dtransform round height div exch height div exch
	0 0 transform round exch round exch
	ptm astore setmatrix
	}
	{
	ptm currentmatrix pop
	} ifelse
{currentpoint} stopped not
	{
	2 npop
	pathbbox
	true
	4 index 3 index eq
	4 index 3 index eq
	and
		{
		pop false
			{
			{2 npop}
			{3 npop true}
			{7 npop true}
			{pop true}
			pathforall
			} stopped
			{
			5 npop true
			} if
		} if
		{
		height div ceiling height mul 4 1 roll
		width div ceiling width mul 4 1 roll
		height div floor height mul 4 1 roll
		width div floor width mul 4 1 roll
		2 index sub height div ceiling cvi exch
		3 index sub width div ceiling cvi exch
		4 2 roll moveto
		FontMatrix mtx invertmatrix
		dup dup 4 get exch 5 get rmoveto
		ptm ptm concatmatrix pop
		slice /s
		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
		dup slice /q get gt
			{
			pop slice /q get
			} if
		put
		0 1 slice /s get dup mul 1 sub
			{
			slice /b get add
			gsave
			0 1 str length 1 sub
				{
				str exch 2 index put
				} for
			pop
			dup
				{
				gsave
				ptm setmatrix
				1 index str length idiv {str show} repeat
				1 index str length mod str exch 0 exch getinterval show
				grestore
				0 height rmoveto
				} repeat
			grestore
			} for
		2 npop
		}
		{
		4 npop
		} ifelse
	} if
end
} def
/patternclip
{
clip
} def
/patternstrokepath
{
strokepath
} def
/patternmatrix
matrix def
/patternfill
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternclip
Adobe_pattern_AI3 /patternpath get exec
grestore
newpath
} def
/patternstroke
{
dup type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get
	} if
gsave
patternstrokepath
true
	{
		{
			{
			newpath 
			moveto
			}
			{
			lineto
			}
			{
			curveto
			}
			{
			closepath
			3 copy
			Adobe_pattern_AI3 /patternfill get exec
			} pathforall
		3 npop
		} stopped
			{
			5 npop
			patternclip
			Adobe_pattern_AI3 /patternfill get exec
			} if
	}
	{
	patternclip
	Adobe_pattern_AI3 /patternfill get exec
	} ifelse
grestore
newpath
} def
/patternashow
{
3 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 4 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	6 index 6 index 6 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
5 npop
} def
/patternawidthshow
{
6 index type /dicttype eq
	{
	Adobe_pattern_AI3 /patternmatrix get 7 1 roll
	} if
	{
	2 npop (0) exch
	2 copy 0 exch put 
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	9 index 9 index 9 index
	Adobe_pattern_AI3 /patternfill get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
8 npop
} def
/patternashowstroke
{
4 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 5 1 roll
	} if
4 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	gsave
	false charpath
	currentpoint
	4 index setmatrix
	7 index 7 index 7 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/patternawidthshowstroke
{
7 index type /dicttype eq
	{
	patternmatrix /patternmatrix get 8 1 roll
	} if
7 1 roll
	{
	2 npop (0) exch
	2 copy 0 exch put
	gsave
	_sp eq {5 index 5 index rmoveto} if
	false charpath currentpoint
	7 index setmatrix
	10 index 10 index 10 index
	Adobe_pattern_AI3 /patternstroke get exec
	grestore
	newpath moveto
	2 copy rmoveto
	} exch cshow
9 npop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0
%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI3 71 dict dup begin put
/initialize
{
userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
/cf	currentflat def
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx {} def
/Tj {} def
/CRender {} def
/_AI3_savepage {} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3 dup /nc get begin
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
end
Adobe_Illustrator_AI3 begin
Adobe_Illustrator_AI3_vars begin
newpath
} def
/terminate
{
end
end
} def
/_
null def
/ddef
{
Adobe_Illustrator_AI3_vars 3 1 roll put
} def
/xput
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop
{
	{
	pop
	} repeat
} def
/sw
{
dup length exch stringwidth
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add
} def
/swj
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index mul add
4 1 roll 3 1 roll mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss
{
4 1 roll
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
/sp
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp
{
	{
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
/pl
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c
	{
	curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	lineto
	} def
	/L
	/l load def
	/m
	{
	moveto
	} def
	}
	{
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	} ifelse
/d
{
setdash
} def
/cf	{} def
/i
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j
{
setlinejoin
} def
/J
{
setlinecap
} def
/M
{
setmiterlimit
} def
/w
{
setlinewidth
} def
/H
{} def
/h
{
closepath
} def
/N
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n
{N} def
/F
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f
{
closepath
F
} def
/S
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s
{
closepath
S
} def
/B
{
_pola 0 eq 
	{
	_doClip 1 eq
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b
{
closepath
B
} def
/W
{
/_doClip 1 ddef
} def
/*
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
/u
{} def
/U
{} def
/q
{
_pola 0 eq {gsave} if
} def
/Q
{
_pola 0 eq {grestore} if
} def
/*u
{
_pola 1 add /_pola exch ddef
} def
/*U
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D
{pop} def
/*w
{} def
/*W
{} def
/`
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
/setstrokeadjust where {pop false setstrokeadjust} if
newpath
0 setgray
false setoverprint
} def
/~
{
end
_i restore
} def
/@
{} def
/&
{} def
/O
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g
{
/_gf exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/dp
{
dup null eq
{
pop
_dp 0 ne
	{
	0 1 _dp 1 sub _dl mod
		{
		_da exch get 3 get
		} for
	_dp 1 sub _dl mod 1 add packedarray
	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
	definepattern pop
	} if
}
{
_dp 0 ne _dp _dl mod 0 eq and
	{
	null dp
	} if
7 packedarray _da exch _dp _dl mod exch put
_dp _dl mod _da 0 get 4 get 2 packedarray
/_dp _dp 1 add def
} ifelse
} def
/E
{
_ed begin
dup 0 get type /arraytype ne
	{
	0
		{
		dup 1 add index type /arraytype eq
			{
			1 add
			}
			{
			exit
			} ifelse
		} loop
	array astore
	} if
/_dd exch def
/_ury exch def
/_urx exch def
/_lly exch def
/_llx exch def
/_n exch def
/_y 0 def
/_dl 4 def
/_dp 0 def
/_da _dl array def
0 1 _dd length 1 sub
	{
	/_d exch _dd exch get def
	0 2 _d length 2 sub
		{
		/_x exch def
		/_c _d _x get _ ne def
		/_r _d _x 1 add get cvlit def
		_r _ ne
			{
			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
					{
					nc /begin cvx
					} if
				_r dup type /stringtype eq
					{
					cvx
					}
					{
					{exec} /forall cvx
					} ifelse
				_c
					{
					/end cvx
					} if
				/restore cvx
				] cvx
			/_fn 12 _n length add string def
			_y _fn cvs pop
			/_y _y 1 add def
			_fn 12 _n putinterval
			_fn _c false dp
			_d exch _x 1 add exch put
			} if
		} for
	} for
null dp
_n _dd /_pd
end xput
} def
/fc
{
_fm dup concatmatrix pop
} def
/p
{
/_fm exch ddef
9 -2 roll _pm translate fc
7 -2 roll _pm scale fc
5 -1 roll _pm rotate fc
4 -2 roll exch 0 ne
	{
	dup _pm rotate fc
	1 -1 _pm scale fc
	neg _pm rotate fc
	}
	{
	pop
	} ifelse
dup _pm rotate fc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore fc
neg _pm rotate fc
_pd exch get /_fdd exch ddef
/_pf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			patternfill
			}
			{
			pop
			fill
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_psf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			9 copy 6 npop patternashow
			}
			{
			pop
			6 copy 3 npop ashow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
%3 npop newpath
sw rmoveto
} ddef
/_pjsf
{
save
/_doClip 0 ddef
0 1 _fdd length 1 sub
	{
	/_fd exch _fdd exch get ddef
	_fd
	0 2 _fd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _fc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _fm
			12 copy 6 npop patternawidthshow
			}
			{
			pop 9 copy 3 npop awidthshow
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
swj rmoveto
} ddef
/_lp /none ddef
} def
/sc
{
_sm dup concatmatrix pop
} def
/P
{
/_sm exch ddef
9 -2 roll _pm translate sc
7 -2 roll _pm scale sc
5 -1 roll _pm rotate sc
4 -2 roll exch 0 ne
	{
	dup _pm rotate sc
	1 -1 _pm scale sc
	neg _pm rotate sc
	}
	{
	pop
	} ifelse
dup _pm rotate sc
exch dup sin exch cos div 1 0 0 1 0 6 2 roll
_pm astore sc
neg _pm rotate sc
_pd exch get /_sdd exch ddef
/_ps
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			patternstroke
			}
			{
			pop stroke
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
newpath
} ddef
/_pss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			10 copy 6 npop patternashowstroke
			}
			{
			pop 7 copy 3 npop ss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop sw rmoveto
} ddef
/_pjss
{
save
/_doClip 0 ddef
0 1 _sdd length 1 sub
	{
	/_sd exch _sdd exch get ddef
	_sd
	0 2 _sd length 2 sub
		{
		gsave
		2 copy get dup _ ne
			{
			cvx exec _sc
			}
			{
			pop
			} ifelse
		2 copy 1 add get dup _ ne
			{
			aload pop findfont _sm
			13 copy 6 npop patternawidthshowstroke
			}
			{
			pop 10 copy 3 npop jss
			} ifelse
		grestore
		pop
		} for
	pop
	} for
restore
pop swj rmoveto
} ddef
/_lp /none ddef
} def
/A
{
pop
} def
/nc 3 dict def
nc begin
/setgray
{
pop
} bind def
/setcmykcolor
{
4 npop
} bind def
/setcustomcolor
{
2 npop
} bind def
currentdict readonly pop end
currentdict readonly pop end
setpacking
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_pattern_AI3 /initialize get exec
Adobe_Illustrator_AI3 /initialize get exec
%AI3_BeginPattern: (Laguna)
(Laguna) 0 3.1914 84.1563 84.791 [
%AI3_Tile
(0 O 0 R 0 1 1 0 k
 0 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d42.0781 30.3906 m
12.2227 12.8779 9.0488 12.4082 V
7.2871 14.1709 0 30.3906 Y
13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 C
f
42.0781 57.5908 m
12.2227 40.0781 9.0488 39.6094 V
7.2871 41.3711 0 57.5908 Y
13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 C
f
42.0781 84.791 m
12.2227 67.2773 9.0488 66.8096 V
7.2871 68.5703 0 84.791 Y
13.1641 74.918 29.1484 77.7402 42.0781 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6 0.9 0.000031 0.000031 k
 0.6 0.9 0.000031 0.000031 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d84.1563 30.3906 m
54.3008 12.8779 51.127 12.4082 V
49.3652 14.1709 42.0781 30.3906 Y
55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 C
f
84.1563 57.5908 m
54.3008 40.0781 51.127 39.6094 V
49.3652 41.3711 42.0781 57.5908 Y
55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 C
f
84.1563 84.791 m
54.3008 67.2773 51.127 66.8096 V
49.3652 68.5703 42.0781 84.791 Y
55.2422 74.918 71.2266 77.7402 84.1563 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.85 0.1 1 0 k
 0.85 0.1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d21.0391 33.582 m
19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c
17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c
22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c
24.2285 32.1523 22.8008 33.582 21.0391 33.582 c
f
21.0391 6.3818 m
19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c
17.8477 1.4287 19.2773 0 21.0391 0 c
22.8008 0 24.2285 1.4287 24.2285 3.1914 c
24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 c
f
21.0391 60.7822 m
19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c
17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c
22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c
24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 c
f
21.0391 87.9824 m
19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c
17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c
22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c
24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 c
f
63.1172 33.582 m
61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c
59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c
64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c
66.3066 32.1523 64.8789 33.582 63.1172 33.582 c
f
63.1172 6.3818 m
61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c
59.9258 1.4287 61.3555 0 63.1172 0 c
64.8789 0 66.3066 1.4287 66.3066 3.1914 c
66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 c
f
63.1172 60.7822 m
61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c
59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c
64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c
66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 c
f
63.1172 87.9824 m
61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c
59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c
64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c
66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.6 0.9 0.000031 0.000031 k
 0.6 0.9 0.000031 0.000031 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d0 3.1914 m
29.8535 20.7041 33.0273 21.1738 V
34.79 19.4111 42.0781 3.1914 Y
28.9141 13.0645 12.9277 10.2422 0 3.1914 C
f
0 30.3906 m
29.8535 47.9033 33.0273 48.374 V
34.79 46.6104 42.0781 30.3906 Y
28.9141 40.2646 12.9277 37.4434 0 30.3906 C
f
0 57.5908 m
29.8535 75.1035 33.0273 75.5752 V
34.79 73.8105 42.0781 57.5908 Y
28.9141 67.4648 12.9277 64.6436 0 57.5908 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0 1 1 0 k
 0 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d42.0781 3.1914 m
71.9316 20.7041 75.1055 21.1738 V
76.8691 19.4111 84.1563 3.1914 Y
70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 C
f
42.0781 30.3906 m
71.9316 47.9033 75.1055 48.374 V
76.8691 46.6104 84.1563 30.3906 Y
70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 C
f
42.0781 57.5908 m
71.9316 75.1035 75.1055 75.5752 V
76.8691 73.8105 84.1563 57.5908 Y
70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%%EndSetup
0 A
0 O
0.695313 0.671875 0.636719 0.738281 k
0 J 0 j 1 w 10 M []0 d500.7705 -410.7705 m
291.2295 -410.7705 L
291.2295 -201.2295 L
500.7705 -201.2295 L
500.7705 -410.7705 L
f
u
*u
1 0.65098 0 0.305882 (PANTONE 288 CV) 0 x
420.748 -309.0566 m
423.5391 -309.0566 426.6455 -309.0566 y
433.3369 -309.0566 436.1895 -311.668 436.1895 -317.792 c
436.1895 -324 428.9834 -324.2822 428.9082 -324.2822 c
424.25 -324.2822 420.748 -324.2822 v
420.748 -320.1182 420.748 -313.2139 420.748 -309.0566 C
F
420.748 -281.5239 m
421.708 -281.5239 425.1299 -281.5239 y
431.8076 -281.5239 433.2041 -284.835 433.2041 -287.6123 c
433.2041 -292.1353 431.752 -295.1504 424.6572 -295.1504 c
422.7012 -295.1504 420.748 -295.1504 v
420.748 -291.2002 420.748 -285.4438 420.748 -281.5239 C
f
1 D
476.0566 -332.6387 m
475 -330.5225 472.8057 -330.3984 471.9814 -330.3535 c
467.7139 -330.3535 463.0303 -330.3486 458.2275 -330.3398 c
461.3789 -327.2246 463.3428 -323.1172 463.3428 -317.792 c
463.3428 -309.1338 458.7012 -303.9165 453.4336 -300.9072 c
454.1973 -300.3789 454.9443 -299.7979 455.6475 -299.1284 c
458.7754 -296.124 460.4297 -292.1406 460.4297 -287.6123 c
460.4297 -275.4326 449.7852 -267.8672 432.6484 -267.8672 C
390.123 -267.8672 L
386.4341 -267.8672 L
386.4341 -281.5239 l
392.9722 -281.5239 393.5713 -281.5239 v
393.5713 -283.4189 393.5713 -289.2002 393.5713 -296.3789 c
391.2349 -294.9263 388.6445 -294.0273 386.2227 -295.2363 c
385.5737 -295.5601 384.7012 -296.1934 384.0454 -297.3135 c
384.0454 -283.6704 384.0454 -268.9736 384.0454 -265.6846 c
389.3911 -265.6846 408.79 -265.6846 Y
408.79 -249.6182 L
332.1274 -249.6182 L
332.1274 -265.6846 l
351.5283 -265.6846 356.8701 -265.6846 v
356.8701 -272.1406 356.8701 -322.6465 Y
372.4316 -322.6465 l
371.7676 -323.0947 371.1162 -323.5488 370.3887 -323.9609 c
369.1675 -323.8613 367.9155 -324.2012 366.6226 -324.9785 c
361.3501 -325.2227 357.0137 -326.1348 y
353.3887 -327.0947 352.625 -329.1777 352.5146 -330.5469 c
351.48 -330.6357 348.7661 -330.8271 346.8716 -332.9072 c
346.4756 -333.3408 344.5669 -337.0098 348.335 -339.3389 c
342.9365 -342.4502 335.3486 -345.9189 330.8809 -344.6855 c
327.3447 -343.4404 321.3281 -342.6797 318.3154 -344.7793 c
316.9976 -345.6953 316.249 -347.0947 316.2573 -348.6279 c
316.2407 -353.4326 322.541 -356.0215 327.8325 -357.3467 c
337.7305 -359.7979 363.7954 -363.7285 392.1729 -347.377 c
395.8921 -345.2197 403.2871 -341.6182 405.0693 -341.4102 c
405.0938 -341.4102 410.7783 -341.0703 Y
414.8896 -340.8438 l
414.9395 -340.8438 470.582 -338.4668 471.7969 -338.4141 c
472.709 -338.4258 474.6846 -338.2324 475.8213 -336.5303 c
476.2441 -335.8838 476.4658 -335.1279 476.4658 -334.3701 c
476.4658 -333.7725 476.3301 -333.1807 476.0566 -332.6387 C
f
*U
*u
0 D
0 0 0 0 k
428.9082 -327.0479 m
419.5479 -327.0479 417.9795 -327.0479 v
417.9795 -325.4238 417.9795 -307.9111 417.9795 -306.2876 c
419.4863 -306.2876 426.6455 -306.2876 y
434.9277 -306.2876 438.958 -310.0498 438.958 -317.792 c
438.958 -326.6494 429.0078 -327.0479 428.9082 -327.0479 C
F
417.9795 -278.7549 m
420.3105 -278.7549 425.1406 -278.7549 y
435.1934 -278.7549 435.9736 -285.5352 435.9736 -287.6123 c
435.9736 -294.5503 432.2666 -297.9194 424.6572 -297.9194 c
419.4033 -297.9194 417.9795 -297.9194 v
417.9795 -296.3066 417.9795 -280.3066 417.9795 -278.7549 C
f
1 D
471.8623 -332.5313 m
471.7744 -332.5283 470.9697 -332.5166 y
459.3369 -332.4004 453.252 -332.3701 452.3721 -332.4258 c
452.167 -332.4395 451.4365 -332.4502 450.3135 -332.459 c
455.9346 -329.9502 460.5762 -325.5352 460.5762 -317.792 c
460.5762 -306.7271 452.0508 -302.644 446.6953 -301.1338 c
448.8975 -300.4258 451.5527 -299.2227 453.7305 -297.1284 c
456.3389 -294.625 457.6611 -291.4243 457.6611 -287.6123 c
457.6611 -276.9819 448.3105 -270.6362 432.6484 -270.6362 C
390.123 -270.6362 L
389.2046 -270.6362 L
389.2046 -278.7549 l
394.5298 -278.7549 396.3413 -278.7549 v
396.3413 -279.4854 396.3413 -289.9082 396.3413 -301.6401 c
395.9531 -301.1587 395.5532 -300.6802 395.1245 -300.2183 c
395.0718 -300.1572 395.0107 -300.0991 394.9473 -300.0493 c
391.3887 -297.1699 388.9985 -296.2847 387.1948 -297.1865 c
386.332 -297.6152 385.3276 -298.6274 385.3276 -301.0093 c
385.3276 -301.1089 385.3276 -301.2114 385.332 -301.3164 c
385.2061 -305.8008 384.4907 -311.4717 381.2778 -316.7354 c
381.2778 -305.0454 381.2778 -264.4453 381.2778 -262.918 c
382.9902 -262.918 406.0205 -262.918 Y
406.0205 -252.3843 L
334.8989 -252.3843 L
334.8989 -262.918 l
357.9297 -262.918 359.6362 -262.918 v
359.6362 -264.7051 359.6362 -319.8779 Y
378.9849 -319.8779 l
376.9722 -322.2178 374.3525 -324.4063 370.8838 -326.2705 c
369.9863 -325.9688 368.8877 -325.9473 367.2266 -327.123 c
367.2007 -327.123 361.542 -327.3359 357.5781 -328.2402 c
355.52 -328.7129 354.6543 -329.8145 354.6416 -330.9209 c
354.6416 -330.9287 354.6416 -330.9375 354.6416 -330.9512 c
354.6416 -332.002 355.5034 -332.835 356.7871 -333.3857 c
356.2114 -333.2725 355.1592 -332.7881 353.8906 -332.7295 c
352.3169 -332.6523 350.397 -332.7158 348.6997 -334.332 c
348.2793 -334.6387 347.7661 -336.8789 350.8506 -338.5283 c
351.9019 -339.0313 352.6484 -339.2363 v
347.4038 -342.6465 336.7568 -348.5723 330.3018 -346.7793 c
326.9019 -345.5049 321.686 -345.0869 319.5576 -346.5664 c
318.8257 -347.0752 318.4316 -347.8027 318.4346 -348.6133 c
318.4219 -352.3428 325.3735 -354.4834 328.3584 -355.2334 c
337.9961 -357.6201 363.394 -361.4463 391.083 -345.4932 c
394.6582 -343.416 402.585 -339.4736 404.8506 -339.2412 c
404.8584 -339.2412 410.6787 -338.8936 Y
414.7178 -338.6748 l
414.6924 -338.6777 421.7939 -338.2734 Y
435.6279 -337.4854 l
435.6494 -337.4795 440.8037 -337.1895 Y
461.3789 -336.4619 l
461.3838 -336.4619 472.126 -336.1299 y
474.2061 -336.249 474.4023 -334.7549 474.4189 -334.4531 c
474.5186 -332.6777 472.5186 -332.5635 471.8623 -332.5313 C
f
*U
*u
0 D
1 0 0.6 0.721569 (PANTONE 3308 CV) 0 x
428.9082 -328.8936 m
416.1338 -328.8936 L
416.1338 -304.4424 L
417.0576 -304.4424 L
426.6455 -304.4424 l
435.9072 -304.4424 440.8037 -309.0596 440.8037 -317.792 c
440.8037 -326.8516 431.9961 -328.8936 428.9082 -328.8936 C
F
1 D
437.8184 -287.6123 m
437.8184 -297.6567 430.6621 -299.7646 424.6572 -299.7646 C
416.1338 -299.7646 l
416.1338 -280.481 416.1338 -278.7935 v
414.5381 -278.7935 399.7803 -278.7935 398.1865 -278.7935 c
398.1865 -279.6235 398.1865 -291.6099 398.1865 -304.1904 c
403.249 -311.9414 404.5215 -321.1504 405.0029 -327.8086 c
405.1133 -329.3359 405.7275 -330.166 406.2588 -330.7188 c
406.5791 -331.0479 408.4766 -331.875 411.998 -332.1992 c
414.3613 -332.4258 433.3896 -332.4922 444.4766 -332.4756 c
451.5479 -330.7109 458.7344 -326.7324 458.7344 -317.792 c
458.7344 -303.5239 442.9697 -302.1353 442.2969 -302.0825 C
442.3086 -300.2432 l
442.4434 -300.2295 455.8184 -298.8462 455.8184 -287.6123 c
455.8184 -278.1382 447.1543 -272.481 432.6484 -272.481 c
392.812 -272.481 391.0454 -272.481 v
391.0454 -273.5903 391.0454 -275.8008 391.0454 -276.9097 c
392.812 -276.9097 425.1465 -276.9097 y
434.4883 -276.9097 437.8184 -282.4395 437.8184 -287.6123 C
f
*U
0 D
0.695313 0.671875 0.636719 0.738281 k
404.6875 -337.5879 m
407.6221 -337.3027 412.1289 -337.2109 414.5879 -337.0117 c
415.832 -336.9434 470.9746 -334.5693 y
471.6143 -334.6113 472.5762 -334.2793 471.0029 -334.1904 c
470.7949 -334.1904 415.332 -334.1904 411.8408 -333.8584 c
408.3447 -333.5352 405.8301 -332.6914 405.0469 -331.8691 c
404.2783 -331.0566 403.4756 -329.8643 403.3428 -327.9277 c
402.7646 -319.9805 401.0908 -309.1924 393.896 -301.3413 c
388.3525 -296.8516 386.8975 -298.4092 386.9971 -301.2554 c
386.7397 -310.5283 384.0703 -321.4297 371.1216 -328.0742 c
370.6167 -327.9473 370.0981 -327.0537 368.0679 -328.5498 c
367.5918 -328.9014 366.751 -328.8047 365.502 -328.8486 c
364.8633 -328.8682 363.7993 -328.7607 362.5171 -328.9346 c
361.2046 -329.1172 359.7207 -329.3906 358.0098 -329.8477 c
355.062 -330.6279 356.5742 -331.7451 357.8452 -332.1104 c
358.48 -332.29 359.772 -332.0713 360.9531 -331.8691 c
362.1426 -331.665 363.6777 -331.6426 363.7554 -331.9336 c
363.8369 -332.1846 362.9463 -332.749 361.9795 -333.3965 c
361.3735 -333.8008 359.8062 -335.043 358.729 -335.2334 c
357.5742 -335.4355 354.3027 -334.5254 353.5337 -334.3564 c
353.1992 -334.2793 352.1812 -334.3672 351.3057 -334.6113 c
350.4424 -334.8516 350.1274 -335.1914 350.2061 -335.7285 c
350.2671 -336.1768 350.5781 -336.5918 351.5215 -336.998 c
352.043 -337.2334 352.7178 -337.7754 355.8228 -338.1104 c
355.8574 -338.124 356.708 -338.2822 356.748 -338.2959 C
356.8091 -338.3262 l
356.1094 -339.0176 339.4844 -351.0537 329.8535 -348.3926 c
325.6377 -346.8105 320.0913 -347.001 320.0996 -348.6055 c
320.0913 -351.4492 328.7637 -353.6182 y
345.1343 -357.6699 368.1201 -356.7988 390.2529 -344.0469 c
392.8755 -342.5254 401.7305 -337.8838 404.6875 -337.5879 C
F
1 0.65098 0 0.305882 (PANTONE 288 CV) 0 x
354.877 -352.959 m
371.8809 -352.29 386.9971 -343.6455 393.0098 -340.0684 C
373.7358 -341.2275 l
375.9971 -341.4131 378.7539 -341.4658 381.209 -341.4404 c
383.6914 -341.4131 387.0137 -341.3301 388.3638 -341.2334 c
379.4424 -346.8516 367.7124 -351.7314 354.877 -352.959 C
F
379.6597 -331.3691 m
385.1382 -330.8213 387.0786 -332.4619 393.1675 -332.6133 c
398.626 -332.749 398.9863 -331.2725 y
398.9395 -334.0166 411.2871 -335.2744 v
402.0039 -335.4902 399.0469 -332.8379 v
397.5586 -333.2168 396.0996 -334.0166 391.311 -333.4268 c
388.895 -333.1309 383.4731 -331.0264 379.6597 -331.3691 C
F
0 0 0 0 k
348.4771 -354.5918 m
331.1274 -354.6328 322.7954 -350.0713 v
321.7109 -349.3223 321.1743 -347.9502 324.2588 -348.3594 c
329.2324 -349.2578 332.9888 -351.1172 335.9556 -352.2764 c
338.9116 -353.4463 348.4771 -354.5918 Y
F
1 0.65098 0 0.305882 (PANTONE 288 CV) 0 x
399.2051 -328.3506 m
399.2324 -325.4189 399.9766 -310.166 391.1895 -301.8975 c
400.8564 -309.4463 400.9082 -328.9619 Y
F
357.9683 -337.4854 m
358.3984 -337.8691 359.1411 -337.4053 359.5615 -337.1777 c
360.0278 -336.9209 361.4248 -335.6982 362.0635 -337.5684 c
361.2046 -336.6357 359.6997 -337.5596 v
358.8062 -338.1104 358.0264 -338.5498 357.9683 -337.4854 C
F
0 0 0 0 k
358.2837 -338.5498 m
358.9683 -338.5498 359.6997 -338.124 360.1191 -337.8916 c
360.5117 -337.6426 360.4951 -338.6855 359.8452 -338.9932 c
359.4009 -339.2031 358.5947 -339.2998 358.2837 -338.5498 C
F
363.9404 -329.9385 m
362.7397 -329.6318 358.8218 -330.3154 358.1025 -330.4863 c
357.3789 -330.6553 356.9961 -331.3906 358.2075 -331.5264 c
359.292 -331.6426 361.8354 -330.9375 363.144 -331.1094 c
364.459 -331.2773 364.6528 -331.9805 364.1479 -332.417 c
363.6528 -332.8604 360.8535 -334.9268 360.4355 -335.1396 c
359.8921 -335.4023 359.3594 -336.0713 357.2739 -335.7148 c
355.6431 -335.4268 355.0371 -335.2744 353.8022 -334.9121 c
352.4341 -334.498 350.9072 -335.3574 y
352.6318 -334.9785 353.4688 -335.2559 v
354.6084 -335.6318 356.9297 -336.1211 357.4507 -336.2236 c
357.9639 -336.3291 359.4829 -336.4033 360.5117 -335.709 c
361.5547 -335.0068 364.4551 -332.918 365.2837 -331.9053 c
366.0869 -330.9287 364.8423 -330.1709 363.9404 -329.9385 C
F
*u
471.1211 -327.7256 m
470.4932 -327.7256 L
470.4932 -325.2832 L
470.4795 -325.2832 L
469.5889 -327.7256 L
468.9863 -327.7256 L
468.126 -325.2832 L
468.1113 -325.2832 L
468.1113 -327.7256 L
467.4863 -327.7256 L
467.4863 -324.6611 L
468.5713 -324.6611 L
469.2871 -326.6611 L
469.3008 -326.6611 L
470.043 -324.6611 L
471.1211 -324.6611 L
F
466.9277 -325.2031 m
465.998 -325.2031 L
465.998 -327.7256 L
465.373 -327.7256 L
465.373 -325.2031 L
464.4492 -325.2031 L
464.4492 -324.6611 L
466.9277 -324.6611 L
466.9277 -325.2031 L
f
*U
1 0 0.6 0.721569 (PANTONE 3308 CV) 0 x
404.1787 -261.0732 m
402.4658 -261.0732 379.4341 -261.0732 y
379.4341 -316.2461 379.4341 -318.0332 v
377.8438 -318.0332 363.0786 -318.0332 361.48 -318.0332 c
361.48 -316.2461 361.48 -261.0732 y
338.4536 -261.0732 336.7427 -261.0732 v
336.7427 -259.7759 336.7427 -255.5298 336.7427 -254.2324 c
338.5176 -254.2324 402.4023 -254.2324 404.1787 -254.2324 c
404.1787 -255.5298 404.1787 -259.7759 404.1787 -261.0732 C
F
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI3 /terminate get exec
Adobe_pattern_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF
